Археолог нашел N артефактов. Известны веса (сi) и ценности (di) артефактов. Нужно выбрать такое подмножество найденных вещей, чтобы суммарый их вес не превысил Z кг, 
а их общая ценность оказалась максимальной. Известно, что решение единственно. Укажите порядковые номера вещей, которые нужно взять. 
Исходный данные Находятся в файле с именем FileName, в первой строке указаны N и Z, а во второй строке значения весов (в кг), в третьей - ценность находок. 
Вывести так же суммарный вес и общую ценность результата.


#include <windows.h>
#include <fstream>
#include <string>
#pragma hdrstop
#include "pt4.h"
using namespace std;

int Max(int k, int t)
{
	if (k >= t)
		return k;
	else return t;
}
void Answer(int k, int s, int** A, int* c, int* d, int& SUM)
{
	if (A[k][s] == 0)
		return;
	if (A[k - 1][s] == A[k][s])
		Answer(k - 1, s, A, c, d, SUM);
	else
	{
		Answer(k - 1, s - c[k - 1], A, c, d, SUM);
		pt << k;
		SUM += c[k - 1];
	}
}
void Solve()
{
	Task("BackRec5");
	ifstream f;
	string FileName;
	int Z, N, i, S = 0;
	pt >> FileName;
	f.open(FileName, ios::in);
	f >> N >> Z;
	int* c = new int[N];
	int* d = new int[N];
	int** A = new int* [N + 1];
	for (int i = 0; i <= N; i++)
		A[i] = new int[Z + 1];
	for (i = 0; i < N; i++)
		f >> c[i];
	for (i = 0; i < N; i++)
		f >> d[i];
	for (i = 0; i <= Z; i++)
		A[0][i] = 0;
	for (i = 0; i <= N; i++)
		A[i][0] = 0;
	for (int k = 1; k <= N; k++)
		for (int s = 1; s <= Z; s++)
			if (s >= c[k - 1])
				A[k][s] = Max(A[k - 1][s], A[k - 1][s - c[k - 1]] + d[k - 1]);
			else
				A[k][s] = A[k - 1][s];
	Answer(N, Z, A, c, d, S);
	pt << S << A[N][Z];
}
